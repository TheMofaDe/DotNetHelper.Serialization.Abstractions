{
  "api/DotNetHelper.Serialization.Abstractions.DataSourceBinary.html": {
    "href": "api/DotNetHelper.Serialization.Abstractions.DataSourceBinary.html",
    "title": "Class DataSourceBinary | DotNetHelper.Serialization.Abstractions",
    "keywords": "Class DataSourceBinary Inheritance Object DataSourceBinary Implements ISerializer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper.Serialization.Abstractions Assembly : DotNetHelper.Serialization.Abstractions.dll Syntax public class DataSourceBinary : ISerializer Constructors | Improve this Doc View Source DataSourceBinary() Declaration public DataSourceBinary() | Improve this Doc View Source DataSourceBinary(Encoding, BinaryFormatter) Declaration public DataSourceBinary(Encoding encoding, BinaryFormatter b = null) Parameters Type Name Description Encoding encoding BinaryFormatter b Properties | Improve this Doc View Source Encoding Gets or sets the encoding. Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding The encoding. | Improve this Doc View Source Formatter Declaration public BinaryFormatter Formatter { get; } Property Value Type Description BinaryFormatter Methods | Improve this Doc View Source Deserialize(Stream, Int32, Boolean) Declaration public dynamic Deserialize(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description Object | Improve this Doc View Source Deserialize(Stream, Type, Int32, Boolean) Declaration public object Deserialize(Stream stream, Type type, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream Type type Int32 bufferSize Boolean leaveStreamOpen Returns Type Description Object | Improve this Doc View Source Deserialize(String) Declaration public dynamic Deserialize(string content) Parameters Type Name Description String content Returns Type Description Object | Improve this Doc View Source Deserialize(String, Type) Declaration public object Deserialize(string content, Type type) Parameters Type Name Description String content Type type Returns Type Description Object | Improve this Doc View Source Deserialize<T>(Stream, Int32, Boolean) Declaration public T Deserialize<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Deserialize<T>(String) Declaration public T Deserialize<T>(string content) where T : class Parameters Type Name Description String content Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DeserializeToList(Stream, Int32, Boolean) Declaration public List<dynamic> DeserializeToList(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description List < Object > | Improve this Doc View Source DeserializeToList(Stream, Type, Int32, Boolean) Declaration public List<object> DeserializeToList(Stream stream, Type type, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream Type type Int32 bufferSize Boolean leaveStreamOpen Returns Type Description List < Object > | Improve this Doc View Source DeserializeToList(String) Declaration public List<dynamic> DeserializeToList(string content) Parameters Type Name Description String content Returns Type Description List < Object > | Improve this Doc View Source DeserializeToList(String, Type) Declaration public List<object> DeserializeToList(string content, Type type) Parameters Type Name Description String content Type type Returns Type Description List < Object > | Improve this Doc View Source DeserializeToList<T>(Stream, Int32, Boolean) Declaration public List<T> DeserializeToList<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source DeserializeToList<T>(String) Declaration public List<T> DeserializeToList<T>(string content) where T : class Parameters Type Name Description String content Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source SerializeToStream(Object, Type, Int32) Declaration public Stream SerializeToStream(object obj, Type type, int bufferSize = 1024) Parameters Type Name Description Object obj Type type Int32 bufferSize Returns Type Description Stream | Improve this Doc View Source SerializeToStream(Object, Type, Stream, Int32, Boolean) Declaration public void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Object obj Type type Stream stream Int32 bufferSize Boolean leaveStreamOpen | Improve this Doc View Source SerializeToStream<T>(T, Int32) Declaration public Stream SerializeToStream<T>(T obj, int bufferSize = 1024) where T : class Parameters Type Name Description T obj Int32 bufferSize Returns Type Description Stream Type Parameters Name Description T | Improve this Doc View Source SerializeToStream<T>(T, Stream, Int32, Boolean) Declaration public void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description T obj Stream stream Int32 bufferSize Boolean leaveStreamOpen Type Parameters Name Description T | Improve this Doc View Source SerializeToString(Object) Declaration public string SerializeToString(object obj) Parameters Type Name Description Object obj Returns Type Description String | Improve this Doc View Source SerializeToString<T>(T) Declaration public string SerializeToString<T>(T obj) where T : class Parameters Type Name Description T obj Returns Type Description String Type Parameters Name Description T Implements ISerializer"
  },
  "api/DotNetHelper.Serialization.Abstractions.Interface.ISerializer.html": {
    "href": "api/DotNetHelper.Serialization.Abstractions.Interface.ISerializer.html",
    "title": "Interface ISerializer | DotNetHelper.Serialization.Abstractions",
    "keywords": "Interface ISerializer Namespace : DotNetHelper.Serialization.Abstractions.Interface Assembly : DotNetHelper.Serialization.Abstractions.dll Syntax public interface ISerializer Methods | Improve this Doc View Source Deserialize(Stream, Int32, Boolean) Deserializes from a string to a list of dynamic objects Declaration dynamic Deserialize(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream A stream. Int32 bufferSize Boolean leaveStreamOpen Returns Type Description Object IEnumerable<dynamic>. | Improve this Doc View Source Deserialize(Stream, Type, Int32, Boolean) Deserializes from string. Declaration object Deserialize(Stream stream, Type type, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream Type type The type. Int32 bufferSize Boolean leaveStreamOpen Returns Type Description Object System.Object. Exceptions Type Condition ArgumentNullException json | Improve this Doc View Source Deserialize(String) Deserializes from a string to a list of dynamic objects Declaration dynamic Deserialize(string content) Parameters Type Name Description String content Returns Type Description Object IEnumerable<dynamic>. | Improve this Doc View Source Deserialize(String, Type) Deserializes from string. Declaration object Deserialize(string content, Type type) Parameters Type Name Description String content Type type The type. Returns Type Description Object System.Object. Exceptions Type Condition ArgumentNullException json | Improve this Doc View Source Deserialize<T>(Stream, Int32, Boolean) Deserializes from string. Declaration T Deserialize<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description T List Of T Type Parameters Name Description T Exceptions Type Condition ArgumentNullException text | Improve this Doc View Source Deserialize<T>(String) Deserializes from string. Declaration T Deserialize<T>(string content) where T : class Parameters Type Name Description String content Returns Type Description T List Of T Type Parameters Name Description T Exceptions Type Condition ArgumentNullException text | Improve this Doc View Source DeserializeToList(Stream, Int32, Boolean) Deserializes from a string to a list of dynamic objects Declaration List<dynamic> DeserializeToList(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Stream stream A delimited CSV string. Int32 bufferSize Boolean leaveStreamOpen Returns Type Description List < Object > IEnumerable<dynamic>. | Improve this Doc View Source DeserializeToList(String) Deserializes from a string to a list of dynamic objects Declaration List<dynamic> DeserializeToList(string content) Parameters Type Name Description String content A delimited CSV string. Returns Type Description List < Object > IEnumerable<dynamic>. | Improve this Doc View Source DeserializeToList(String, Type) Deserializes from string. Declaration List<object> DeserializeToList(string content, Type type) Parameters Type Name Description String content Type type The type. Returns Type Description List < Object > System.Object. Exceptions Type Condition ArgumentNullException json | Improve this Doc View Source DeserializeToList<T>(Stream, Int32, Boolean) Deserializes from string. Declaration List<T> DeserializeToList<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description Stream stream Int32 bufferSize Boolean leaveStreamOpen Returns Type Description List <T> List Of T Type Parameters Name Description T Exceptions Type Condition ArgumentNullException text | Improve this Doc View Source DeserializeToList<T>(String) Deserializes from string. Declaration List<T> DeserializeToList<T>(string content) where T : class Parameters Type Name Description String content Returns Type Description List <T> List Of T Type Parameters Name Description T Exceptions Type Condition ArgumentNullException text | Improve this Doc View Source SerializeToStream(Object, Type, Int32) Serializes the object to a new instance of a memory stream. Declaration Stream SerializeToStream(object obj, Type type, int bufferSize = 1024) Parameters Type Name Description Object obj The obj. Type type Int32 bufferSize Returns Type Description Stream Exceptions Type Condition ArgumentNullException obj | Improve this Doc View Source SerializeToStream(Object, Type, Stream, Int32, Boolean) Serializes the object to the provided stream. Declaration void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Object obj The obj. Type type Stream stream The stream. Int32 bufferSize Boolean leaveStreamOpen Exceptions Type Condition ArgumentNullException obj | Improve this Doc View Source SerializeToStream<T>(T, Int32) Serializes the generic object to a new instance of a memory stream. Declaration Stream SerializeToStream<T>(T obj, int bufferSize = 1024) where T : class Parameters Type Name Description T obj The obj. Int32 bufferSize Returns Type Description Stream Type Parameters Name Description T Exceptions Type Condition ArgumentNullException obj | Improve this Doc View Source SerializeToStream<T>(T, Stream, Int32, Boolean) Serializes the generic object to a new instance of a memory stream. Declaration void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description T obj The obj. Stream stream The stream. Int32 bufferSize Boolean leaveStreamOpen Type Parameters Name Description T Exceptions Type Condition ArgumentNullException obj | Improve this Doc View Source SerializeToString(Object) Serializes to string. Declaration string SerializeToString(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description String System.String. Exceptions Type Condition ArgumentNullException obj | Improve this Doc View Source SerializeToString<T>(T) Serializes to string. Declaration string SerializeToString<T>(T obj) where T : class Parameters Type Name Description T obj The obj. Returns Type Description String System.String. Type Parameters Name Description T Exceptions Type Condition ArgumentNullException obj"
  },
  "tutorials/Attributes/attribute.html": {
    "href": "tutorials/Attributes/attribute.html",
    "title": "Custom Attributes | DotNetHelper.Serialization.Abstractions",
    "keywords": "Custom Attributes In the secnarios where you need to build Update,Delete, or Upsert Statements. Attributes are use to generate the where clause. This library has its own custom attributes and can also work with the common DataAnnotation attributes. With the support of DataAnnotation this means this library could be paired with your favorite orm like Dapper or Enitity Framework Mark a property as an identity fields. [SqlColumn(SetIsIdentityKey = true)] OR [DatabaseGenerated(DatabaseGeneratedOption.Identity)] Mark a property as a key field. [SqlColumn(SetIsIdentityKey = true)] OR [DatabaseGenerated(DatabaseGeneratedOption.Identity)] <!-- #### Storing Columns As CSV, XML, & JSON ```csharp [SqlColumn(SerializableType = SerializableType.Json)] or [SqlColumn(SerializableType = SerializableType.Xml)] or [SqlColumn(SerializableType = SerializableType.Csv)] ``` -->"
  },
  "tutorials/GenerateSql/object2sql.html": {
    "href": "tutorials/GenerateSql/object2sql.html",
    "title": "SAMPLE ARTICLE | DotNetHelper.Serialization.Abstractions",
    "keywords": "SAMPLE ARTICLE"
  },
  "tutorials/index.html": {
    "href": "tutorials/index.html",
    "title": "THIS IS THE HOME PAGE TO TUTORIALS | DotNetHelper.Serialization.Abstractions",
    "keywords": "THIS IS THE HOME PAGE TO TUTORIALS"
  },
  "api/DotNetHelper.Serialization.Abstractions.Interface.html": {
    "href": "api/DotNetHelper.Serialization.Abstractions.Interface.html",
    "title": "Namespace DotNetHelper.Serialization.Abstractions.Interface | DotNetHelper.Serialization.Abstractions",
    "keywords": "Namespace DotNetHelper.Serialization.Abstractions.Interface Interfaces ISerializer"
  },
  "api/DotNetHelper.Serialization.Abstractions.html": {
    "href": "api/DotNetHelper.Serialization.Abstractions.html",
    "title": "Namespace DotNetHelper.Serialization.Abstractions | DotNetHelper.Serialization.Abstractions",
    "keywords": "Namespace DotNetHelper.Serialization.Abstractions Classes DataSourceBinary"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper.Serialization.Abstractions | DotNetHelper.Serialization.Abstractions",
    "keywords": "DotNetHelper.Serialization.Abstractions DotNetHelper.Serialization.Abstractions is a lightweight serialization library. One serializer/deserializer interface. This library come with an ISerializer interface and an implementation of a binary serializer || View on Github || How to use var binarySerializer = new DataSourceBinary(); Now you have access to all the Apis you will ever need for a binary serializer check them out //Serialize an object to the provided stream void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class; void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false); //Serialize an object to a new instance of a stream and returns the stream Stream SerializeToStream<T>(T obj, int bufferSize = 1024) where T : class; Stream SerializeToStream(object obj, Type type, int bufferSize = 1024); //Serialize an object to a string string SerializeToString(object obj); string SerializeToString<T>(T obj) where T : class; //Retrieve a list of either generics,objects,or dynamics from either a stream or string List<dynamic> DeserializeToList(string content); List<dynamic> DeserializeToList(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false); List<T> DeserializeToList<T>(string content) where T : class; List<T> DeserializeToList<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class; List<object> DeserializeToList(string content, Type type); //Retrieve a dynamic object from String or stream dynamic Deserialize(string content); dynamic Deserialize(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false); //Retrieve a strongly type from a string or stream T Deserialize<T>(string content) where T : class; T Deserialize<T>(Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class; //Retrieve a object from a string or stream object Deserialize(string content, Type type); object Deserialize(Stream stream, Type type, int bufferSize = 1024, bool leaveStreamOpen = false); Serialization with Json JSON LINK Serialization with Csv CSV LINK <!-- Links. -->"
  },
  "tutorials/GenerateSql/datatable2sql.html": {
    "href": "tutorials/GenerateSql/datatable2sql.html",
    "title": "SAMPLE ARTICLE | DotNetHelper.Serialization.Abstractions",
    "keywords": "SAMPLE ARTICLE"
  }
}